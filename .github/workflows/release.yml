name: Build & Release (Tauri Desktop)

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write  # needed to create/update releases

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    env:
      # Let AppImages run in CI without FUSE
      APPIMAGE_EXTRACT_AND_RUN: "1"
      # Speed up cargo
      CARGO_TERM_COLOR: always
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            target: linux
          - os: windows-latest
            target: windows
          - os: macos-13
            target: mac

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache cargo registry + target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      # OS-specific deps for Tauri bundling
      - name: Install Linux dependencies
        if: matrix.target == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev \
            librsvg2-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
            gstreamer1.0-plugins-bad gstreamer1.0-libav \
            patchelf desktop-file-utils file

      - name: Install Tauri CLI
        run: cargo install tauri-cli --locked

      # Optional: ensure your crates are on the published 2.4 line
      - name: Sync Tauri crates (optional)
        run: |
          cargo update -p tauri -p tauri-build || true

      - name: Build release bundles
        shell: bash
        run: |
          if [ "${{ matrix.target }}" = "linux" ]; then
            cargo tauri build --verbose
          elif [ "${{ matrix.target }}" = "windows" ]; then
            cargo tauri build --verbose
          else
            cargo tauri build --verbose
          fi

      # Collect outputs per-OS (globs are tolerantâ€”missing files won't fail)
      - name: Upload artifacts (Linux)
        if: matrix.target == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: bundles-linux
          path: |
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/rpm/*.rpm
          if-no-files-found: ignore

      - name: Upload artifacts (Windows)
        if: matrix.target == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: bundles-windows
          path: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe
          if-no-files-found: ignore

      - name: Upload artifacts (macOS)
        if: matrix.target == 'mac'
        uses: actions/upload-artifact@v4
        with:
          name: bundles-macos
          path: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/macos/*.app
          if-no-files-found: ignore

  release:
    name: Create/Update GitHub Release
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts (debug)
        run: |
          echo "Artifacts downloaded to:"
          ls -R artifacts || true

      - name: Publish to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
